[versions]
kotlin = "2.0.20"
serialization = "1.7.3"
reflect = "2.1.0"
coroutines = "1.9.0"
kotest = "5.9.1"
mockk = "1.13.16"

# uncomment if using ktor
#ktor-version = "3.0.3"
#logback-version = "1.4.14"

# uncomment if using exposed
#exposed = "0.57.0"
#postgres-driver = "42.7.4"

[libraries]
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "reflect" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# uncomment if using ktor
#ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor-version" }
#ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-version" }
#logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }
#ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-version" }
#ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-version" }
#ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-version" }

# uncomment if using exposed
#exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
#exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
#postgres-driver = { module = "org.postgresql:postgresql", version.ref = "postgres-driver" }

# test
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# uncomment if using ktor
#ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }

[bundles]
kotlin = ["kotlinx-serialization", "kotlin-reflect", "kotlin-coroutines"]
kotest = ["kotest-runner", "kotest-assertions", "mockk"]

# uncomment if using ktor
#ktor = ["ktor-server-core", "ktor-server-netty", "ktor-server-config-yaml", "logback-classic", "ktor-server-content-negotiation", "ktor-serialization-kotlinx-json"]

# uncomment if using exposed
#exposed-spring = ["exposed", "postgres-driver", "exposed-java-time"]
